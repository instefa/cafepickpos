/**
 * ************************************************************************
 * * The contents of this file are subject to the MRPL 1.2
 * * (the  "License"),  being   the  Mozilla   Public  License
 * * Version 1.1  with a permitted attribution clause; you may not  use this
 * * file except in compliance with the License. You  may  obtain  a copy of
 * * the License at http://www.floreantpos.org/license.html
 * * Software distributed under the License  is  distributed  on  an "AS IS"
 * * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
 * * License for the specific  language  governing  rights  and  limitations
 * * under the License.
 * * The Original Code is FLOREANT POS.
 * * The Initial Developer of the Original Code is OROCUBE LLC
 * * All portions are Copyright (C) 2015 OROCUBE LLC
 * * All Rights Reserved.
 * ************************************************************************
 */
package ru.instefa.cafepickpos.swing;

import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.KeyboardFocusManager;
import java.awt.event.ActionEvent;

import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.event.EventListenerList;
import javax.swing.text.JTextComponent;

import ru.instefa.cafepickpos.Messages;
import ru.instefa.cafepickpos.swing.event.KeypadEvent;
import ru.instefa.cafepickpos.swing.event.KeypadEventListener;

/**
 * 
 * @author  seliger (github: https://github.com/coresoftwaresystems/Restaurant-OPEN/blob/b875efbc2b6f66556062e93c4b61b90dd21c6429/src/com/coresoftwaresystems/swing/NumericKeypad.java)
 */
public class NumericKeypad extends javax.swing.JComponent {

	private static final String CLEAR = "CLEAR";
	private EventListenerList eventListeners = new EventListenerList();
	private String text = ""; //$NON-NLS-1$
	private KeypadEvent keypadEvent = null;
	private boolean isProtected = false;

	/** Creates new form PasswordForm */
	public NumericKeypad() {
		initComponents();
	}

	public synchronized void removeKeypadEventListener(KeypadEventListener listener) {
		eventListeners.remove(KeypadEventListener.class, listener);
	}

	public synchronized void addKeypadEventListener(KeypadEventListener listener) {
		eventListeners.add(KeypadEventListener.class, listener);
	}

	protected synchronized void fireKeypadEvent(int eventId) {
		Object[] listeners = eventListeners.getListenerList();
		for (int i = listeners.length - 2; i >= 0; i -= 2) {
			if (listeners[i] == KeypadEventListener.class) {
				keypadEvent = new KeypadEvent(this, eventId);
				((KeypadEventListener) listeners[i + 1]).receiveKeypadEvent(keypadEvent);
			}
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {
		keypadPanel = new javax.swing.JPanel();
		posButton7 = new ru.instefa.cafepickpos.swing.PosButton();
		posButton7.setFocusable(false);
		posButton8 = new ru.instefa.cafepickpos.swing.PosButton();
		posButton8.setFocusable(false);
		posButton9 = new ru.instefa.cafepickpos.swing.PosButton();
		posButton9.setFocusable(false);
		posButton4 = new ru.instefa.cafepickpos.swing.PosButton();
		posButton4.setFocusable(false);
		posButton5 = new ru.instefa.cafepickpos.swing.PosButton();
		posButton5.setFocusable(false);
		posButton6 = new ru.instefa.cafepickpos.swing.PosButton();
		posButton6.setFocusable(false);
		posButton1 = new ru.instefa.cafepickpos.swing.PosButton();
		posButton1.setFocusable(false);
		posButton2 = new ru.instefa.cafepickpos.swing.PosButton();
		posButton2.setFocusable(false);
		posButton3 = new ru.instefa.cafepickpos.swing.PosButton();
		posButton3.setFocusable(false);
		posButton0 = new ru.instefa.cafepickpos.swing.PosButton();
		posButton0.setFocusable(false);

		keypadPanel.setLayout(new java.awt.GridLayout(4, 3, 5, 5));

		posButton7.setAction(goAction);
		posButton7.setIcon(ru.instefa.cafepickpos.IconFactory.getIcon("7.png")); //$NON-NLS-1$
		posButton7.setActionCommand("7"); //$NON-NLS-1$
		keypadPanel.add(posButton7);

		posButton8.setAction(goAction);
		posButton8.setIcon(ru.instefa.cafepickpos.IconFactory.getIcon("8.png")); //$NON-NLS-1$
		posButton8.setActionCommand("8"); //$NON-NLS-1$
		keypadPanel.add(posButton8);

		posButton9.setAction(goAction);
		posButton9.setIcon(ru.instefa.cafepickpos.IconFactory.getIcon("9.png")); //$NON-NLS-1$
		posButton9.setActionCommand("9"); //$NON-NLS-1$
		keypadPanel.add(posButton9);

		posButton4.setAction(goAction);
		posButton4.setIcon(ru.instefa.cafepickpos.IconFactory.getIcon("4.png")); //$NON-NLS-1$
		posButton4.setActionCommand("4"); //$NON-NLS-1$
		keypadPanel.add(posButton4);

		posButton5.setAction(goAction);
		posButton5.setIcon(ru.instefa.cafepickpos.IconFactory.getIcon("5.png")); //$NON-NLS-1$
		posButton5.setActionCommand("5"); //$NON-NLS-1$
		keypadPanel.add(posButton5);

		posButton6.setAction(goAction);
		posButton6.setIcon(ru.instefa.cafepickpos.IconFactory.getIcon("6.png")); //$NON-NLS-1$
		posButton6.setActionCommand("6"); //$NON-NLS-1$
		keypadPanel.add(posButton6);

		posButton1.setAction(goAction);
		posButton1.setIcon(ru.instefa.cafepickpos.IconFactory.getIcon("1.png")); //$NON-NLS-1$
		posButton1.setActionCommand("1"); //$NON-NLS-1$
		keypadPanel.add(posButton1);

		posButton2.setAction(goAction);
		posButton2.setIcon(ru.instefa.cafepickpos.IconFactory.getIcon("2.png")); //$NON-NLS-1$
		posButton2.setActionCommand("2"); //$NON-NLS-1$
		keypadPanel.add(posButton2);

		posButton3.setAction(goAction);
		posButton3.setIcon(ru.instefa.cafepickpos.IconFactory.getIcon("3.png")); //$NON-NLS-1$
		posButton3.setActionCommand("3"); //$NON-NLS-1$
		keypadPanel.add(posButton3);

		btnDot = new PosButton();
		btnDot.setFocusable(false);
		btnDot.setAction(goAction);
		btnDot.setActionCommand("."); //$NON-NLS-1$
		btnDot.setIcon(ru.instefa.cafepickpos.IconFactory.getIcon("dot.png")); //$NON-NLS-1$
		keypadPanel.add(btnDot);

		posButton0.setAction(goAction);
		posButton0.setIcon(ru.instefa.cafepickpos.IconFactory.getIcon("0.png")); //$NON-NLS-1$
		posButton0.setActionCommand("0"); //$NON-NLS-1$
		keypadPanel.add(posButton0);
		setLayout(new BorderLayout(0, 0));
		btnClear = new ru.instefa.cafepickpos.swing.PosButton();
		btnClear.setFocusable(false);
		keypadPanel.add(btnClear);

		btnClear.setAction(goAction);
		btnClear.setIcon(ru.instefa.cafepickpos.IconFactory.getIcon("clear.png")); //$NON-NLS-1$
		btnClear.setText(Messages.getString("NumericKeypad.0")); //$NON-NLS-1$
		btnClear.setActionCommand(CLEAR);
		add(keypadPanel, BorderLayout.CENTER);
	}// </editor-fold>

	private javax.swing.JPanel keypadPanel;
	private ru.instefa.cafepickpos.swing.PosButton posButton0;
	private ru.instefa.cafepickpos.swing.PosButton posButton1;
	private ru.instefa.cafepickpos.swing.PosButton btnClear;
	private ru.instefa.cafepickpos.swing.PosButton posButton2;
	private ru.instefa.cafepickpos.swing.PosButton posButton3;
	private ru.instefa.cafepickpos.swing.PosButton posButton4;
	private ru.instefa.cafepickpos.swing.PosButton posButton5;
	private ru.instefa.cafepickpos.swing.PosButton posButton6;
	private ru.instefa.cafepickpos.swing.PosButton posButton7;
	private ru.instefa.cafepickpos.swing.PosButton posButton8;
	private ru.instefa.cafepickpos.swing.PosButton posButton9;
	// End of variables declaration//GEN-END:variables

	Action goAction = new AbstractAction() {
		public void actionPerformed(ActionEvent e) {
			Component focusOwner = KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner();
			JTextComponent focusedTextComponent = null;

			if (!(focusOwner instanceof JTextComponent)) {
				return;
			}

			focusedTextComponent = (JTextComponent) focusOwner;

			String command = e.getActionCommand();

			if (CLEAR.equals(command)) {
				focusedTextComponent.setText(""); //$NON-NLS-1$
			}
			else {
				focusedTextComponent.replaceSelection(command);
			}
		}
	};
	private PosButton btnDot;

	public String getText() {
		return text;
	}

	public void setProtected(boolean isProtected) {
		this.isProtected = isProtected;
	}

	public boolean isProtected() {
		return isProtected;
	}

	public static void main(String[] args) {
		JPanel p = new JPanel(new BorderLayout());
		p.add(new NumericKeypad());
		JFrame frame = new JFrame();
		frame.getContentPane().add(p);
		frame.pack();
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setVisible(true);
	}
}